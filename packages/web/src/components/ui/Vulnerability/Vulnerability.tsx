import React from 'react';
import clsx from 'clsx';
import TagBadge from '../TagBadge/TagBadge';
import styles from './Vulnerability.module.scss';
import { External } from '../../icons';

export type PackageVulnerabilityData = {
  affectedPackageName: string;
  affectedVersionRange: string;
  osvId: string;
  detailsUrl: string;
  summary?: string;
  severity?: string;
};

export type Props = {
  vulnerability: PackageVulnerabilityData;
};

export default function Vulnerability({ vulnerability }: Props) {
  return (
    <div className={styles.vulnerability}>
      {!!vulnerability.detailsUrl && (
        <a
          className={clsx(styles.vulnerabilityDataColumn, styles.inlineIcon)}
          href={vulnerability.detailsUrl}
          target='_blank'
          rel='noreferrer'
        >
          <External />
        </a>
      )}

      <span className={styles.vulnerabilityDataColumn}>
        <VulnerabilitySeverityTagBadge severity={vulnerability.severity} />
        &nbsp;
        {vulnerability.osvId}
      </span>

      <span className={clsx(styles.vulnerabilityDataColumn, styles.vulnerabilitySummary)}>
        {vulnerability.summary}
      </span>
      <span className={styles.vulnerabilityDataColumn}>{vulnerability.affectedVersionRange}</span>
    </div>
  );
}

export type VulnerabilitySeverityTagBadgeProps = {
  severity?: string;
};

const SeverityColorMapping: Record<string, string> = {
  CRITICAL: 'red',
  HIGH: 'red',
  MEDIUM: 'yellow',
  LOW: 'gray',
  UNKNOWN: 'gray',
};

function VulnerabilitySeverityTagBadge({ severity }: VulnerabilitySeverityTagBadgeProps) {
  const formattedSeverity = severity ? severity.toUpperCase() : 'UNKNOWN';

  return <TagBadge color={SeverityColorMapping[formattedSeverity]}>{formattedSeverity}</TagBadge>;
}

export const SeverityWeightMap: Record<string, number> = {
  CRITICAL: 4,
  HIGH: 3,
  MEDIUM: 2,
  LOW: 1,
  UNKNOWN: 0,
};
